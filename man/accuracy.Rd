% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accuracy.R
\name{accuracy}
\alias{accuracy}
\title{Conduct accuracy analysis}
\usage{
accuracy(result, zeta = seq(from = 0.05, to = 0.8, by = 0.05))
}
\arguments{
\item{result}{an object of class “peri”, usually, a result of a call to
\code{\link{peri}}.}

\item{zeta}{A vector of variance reduction factor ([0, 1)).
Default is between 0.05 and 0.8. A particular value of zeta means that we
want to reduce the variance to zeta * 100\%, that is, the variance will be
multiplied by (1 - zeta). For example, if we want to reduce the variance by
20\%, we set zeta = 0.2. A larger value of zeta requires more observations.}
}
\description{
Compute ell-value, u-value, and h-value
}
\examples{
set.seed(1234)
n_ell <- 200
n_u <- 5000
n_all <- n_ell + n_u

# true model
X <- rnorm(n_all)
Y <- 0.5 + X + rnorm(n_all, mean = 0, sd = 0.3)

# Add noise to the outcome to create proxy variable
# Y_proxy are Y with non-classical measurement errors
Y_proxy_1 <- Y + rnorm(n_all, mean = X, sd = 0.1)

# Create a data frame
df_test <- data.frame(
  Y = Y,
  Y_proxy_1 = Y_proxy_1,
  X = X,
  is_labeled = c(rep(1, n_ell), rep(0, n_u))
) |> 
  dplyr::mutate(Y = dplyr::if_else(is_labeled == 1, Y, NA_real_))

# Prepare functions for the analysis
fn_main <- function(df) {
  fit <- lm(Y ~ X, data = df)
  fit$coef
}

fn_proxy_1 <- function(df) {
  fit <- lm(Y_proxy_1 ~ X, data = df)
  fit$coef
}

# Run functions
fit_1 <- peri(
  main_model = fn_main,
  proxy_model = fn_proxy_1,
  data = df_test,
  labeled_set_var_name = "is_labeled",
  options = SetOptions(n_boot = 500, use_full = FALSE)
)
summary(fit_1)

accuracy_out <- accuracy(fit_1)

# View the summary of the accuracy output
summary(accuracy_out, nrows = 5)

# Plot the output from the accuracy analysis 
accuracy_plot <- plot(accuracy_out)
accuracy_plot[["X"]]
}
