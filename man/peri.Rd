% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{peri}
\alias{peri}
\title{Prediction-error Robust Inference for Statistical Analysis}
\usage{
peri(
  main_model,
  proxy_model,
  data,
  labeled_set_var_name,
  options = SetOptions(),
  args_main_model = list(),
  args_proxy_model = list()
)
}
\arguments{
\item{main_model}{A function that estimates the target parameter with the
labeled data. The function takes the data as the first argument and
returns the estimate of the target parameter. The target parameter must
be a scalar. The additional arguments to the main_model function must be
provided in the args_main_model argument.}

\item{proxy_model}{A function that estimates the target parameter with the
proxy variables. The function takes the data as the first argument and
returns the estimate of the target parameter. The target parameter must
be a scalar or a vector. The additional arguments to the proxy_model
function must be provided in the args_proxy_model argument.}

\item{data}{A data frame that contains the labeled and unlabeled data. The
rows that contains the labeled data must be indicated by a variable in
the data frame. The variable name must be provided in the
labeled_set_var_name argument.}

\item{labeled_set_var_name}{The name of the variable that indicates whether
rows are labeled or not. The variable must be binary.}

\item{options}{A list of options for the analysis. The values must be set
by the \code{\link[=SetOptions]{SetOptions()}}.}

\item{args_main_model}{A list of additional arguments to be passed to the
main_model function. The list must be named.}

\item{args_proxy_model}{A list of additional arguments to be passed to the
proxy_model function. The list must be named.}
}
\description{
Prediction-error Robust Inference for Statistical Analysis
}
\examples{
# Minimal example for peri function
set.seed(1234)

# True labels (unobserved)
Y_true <- rnorm(5100)
df <- data.frame(
  Y_label = c(Y_true[1:100], rep(NA, 5000)), 
  Y_proxy = round(Y_true / 4) * 4 + rnorm(n = 5100, mean = 0, sd = 0.5),
  is_labeled = c(rep(1, 100), rep(0, 5000))
)

# Main model is to take the sample mean of the labeled outcome
fn_true <- function(df) {
  mean(df$Y_label, na.rm = TRUE)
}

# Proxy model is to take the sample mean of the predicted outcome
fn_proxy <- function(df) {
  mean(df$Y_proxy, na.rm = TRUE)
}

fit <- peri(
  main_model = fn_true,
  proxy_model = fn_proxy,
  data = df,
  labeled_set_var_name = "is_labeled"
)

summary(fit)
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
  # See full examples in inst/examples/example-peri.R
  # Or run: source(system.file("examples/example-peri.R", package = "peri"))
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=SetOptions]{SetOptions()}}
}
